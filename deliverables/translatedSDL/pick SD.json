{
  "PlpMain": {
    "Project": "collect_toys",
    "Name": "pick",
    "Type": "PLP"
  },
  "PossibleParametersValue": [
    {
      "AssignmentCode": [
        "__possibleParameters.push_back(std::make_tuple(\"blue\"));",
        "__possibleParameters.push_back(std::make_tuple(\"red\"));",
        "__possibleParameters.push_back(std::make_tuple(\"black\"));",
        "__possibleParameters.push_back(std::make_tuple(\"green\"));"
      ]
    }
  ],
  "GlobalVariableModuleParameters": [
    {
      "Name": "toyType",
      "Type": "string"
    }
  ],
  "Preconditions": {
    "GlobalVariablePreconditionAssignments": [
      {
        "AssignmentCode": [
          "__meetPrecondition = false;",
          "bool holding = false;",
          "int hand_loc = 5;",
          "int baby_loc = 4;",
          "bool typeMatch = false;",
          "for(int i=0; i < state.tBallObjects.size(); i++)",
          "{",
          "    if(hand_loc == state.tBallObjects[i]->location)",
          "    { ",
          "        holding = true; break;",
          "    }",
          "    if(state.robotLocation == state.tBallObjects[i]->location && state.tBallObjects[i]->color == toyType) typeMatch=true;",
          "}",
          "__meetPrecondition = !holding && typeMatch && state.robotLocation != baby_loc;"
        ]
      }
    ],
    "ViolatingPreconditionPenalty": 0
  },
  "DynamicModel": {
    "NextStateAssignments": [
      {
        "AssignmentCode": [
          "int hand_loc = 5;",
          " bool successful_pick =  __meetPrecondition ;",
          " state__.pick_cnt++;",
          " if(successful_pick)",
          " {",
          "    for(int i=0; i < state__.tBallObjects.size(); i++){",
          "        if(state.robotLocation == state.tBallObjects[i]->location)",
          "        {",
          "            state__.tBallObjects[i]->location = hand_loc; break;",
          "        }",
          "    }",
          "}",
          "__moduleResponse = successful_pick ? eSuccess : eFailed;",
          " __reward = successful_pick ? -1 : -2;"
        ]
      }
    ]
  }
}